
const router = require("express").Router();

let Exercise = require("../models/exercise.model");

//Exercise.find() to find Exercises from the DB then() returned as JSON res.json
router.route("/").get((req, res)=> {
Exercise.find()

.then(exercises => res.json(exercises))
.catch(err => res.status(400).json("Error: " + err));

});

//Post request, take the diferent properties, which its respectives data types, from the exercises req.
//Create a new instance of Exercise and add this values.
//Return a new exercise .then(() => res.json("Exercise Added!!")).
router.route("/add").post((req, res)=>{

    const username = req.body.username;

    const description = req.body.description;

    const duration = Number(req.body.duration);

    const date = Date.parse(req.body.date);

    
    const newExercise = new Exercise({

        username,
        description,
        duration,
        date,
    });

    newExercise.save()
    .then(() => res.json("Exercise Added!!"))
    .catch(err => res.status(400).json("Error: " + err));

});
// After a new exercise is created, "/:id" is generated by MongoDB is an object. 


router.route("/:id").get((req, res)=> {

    Exercise.findById(req.params.id)
    .then(exercise => res.json(exercise))
    .catch(err => res.status(400).json("Error: " + err))
    
});


router.route("/:id").delete((req, res)=> {

    Exercise.findByIdAndDelete(req.params.id)
    .then(exercise => res.json("Exercise deleted"))
    .catch(err => res.status(400).json("Error: " + err))
    
});
//Access the specific id " Exercise.findById(req.params.id)" and use the new information to updated.
router.route("/update/:id").post((req, res)=> {

    Exercise.findById(req.params.id)
    .then(exercise => {
        exercise.username = req.body.username;
        exercise.description = req.body.description;
        exercise.duration = Number(req.body.duration);
        exercise.date = Date(req.body.date);

        exercise.save()
        .then(()=> res.json("Exercise update!"))
        .catch(err => res.status(400).json("Error: " + err)) 
    })

    .catch(err => res.status(400).json("Error: " + err))
    
});

module.exports = router;